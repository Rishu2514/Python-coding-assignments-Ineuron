Q-1-Define a class with a generator which can iterate the numbers, which are divisible by 7, between a given range 0 and n.
A-1-
class DivisibleBySevenGenerator:
    def __init__(self, n):
        self.n = n

    def generate_numbers(self):
        for num in range(self.n + 1):
            if num % 7 == 0:
                yield num


# Example usage
n = int(input("Enter a number: "))
generator = DivisibleBySevenGenerator(n)
for num in generator.generate_numbers():
    print(num)


Q-2-Write a program to compute the frequency of the words from the input.The output should output after sorting the key 
alphanumerically.
A-2-
def compute_word_frequency(input_text):
  words = input_text.split()
  word_frequency = {}
  for word in words:
    word_frequency[word] = word_frequency.get(word, 0) + 1
  sorted_word_frequency = sorted(word_frequency.items())
  return sorted_word_frequency

input_text = input("Enter some text: ")
word_frequency = compute_word_frequency(input_text)
for word, frequency in word_frequency:
  print(f"{word}: {frequency}")



Q-3-Define a class Person and its two child classes: Male and Female. All classes have a method "getGender" which can print "Male" 
for Male class and "Female" for Female class.
A-3-
class Person:
  def getGender(self):
    pass
class Male(Person):
  def getGender(self):
    print("Male")
class Female(Person):
  def getGender(self):
    print("Female")

person1 = Male()
person1.getGender()

person2 = Female()
person2.getGender()  



Q-4-Please write a program to generate all sentences where subject is in ["I", "You"] and verb is in ['Play', "Love"] and the object
is in ["Hockey","Football"].
A-4-
subjects = ["I", "You"]
verbs = ["Play", "Love"]
objects = ["Hockey", "Football"]

sentences = []
for subject in subjects:
  for verb in verbs:
    for obj in objects:
      sentence = f"{subject} {verb} {obj}."
      sentences.append(sentence)

for sentence in sentences:
  print(sentence)


Q-5-Please write a program to compress and decompress the string "hello world!hello world!hello world!hello world!"
A-5-
import zlib
string = 'hello world!hello world!hello world!hello world!'
compress_string = zlib.compress(bytes(s, 'utf-8'))
print(f"Compressed string is: {compress_string}")
print(f"Decompressed string is: {zlib.decompress(compress_string)}")


Q-6-Please write a binary search function which searches an item in a sorted list. The function should return the index of element
to be searched in the list.
A-6-
def binarySearch(list1, n):  
    low = 0  
    high = len(list1) - 1  
    mid = 0  
    while low <= high:  
        mid = (high + low) // 2  
        if list1[mid] < n:  
            low = mid + 1  
        elif list1[mid] > n:  
            high = mid - 1  
        else:  
            return mid  
    return -1
sorted_list = [1, 4, 5, 12, 54, 678, 1235]
binarySearch(sorted_list, 54)















