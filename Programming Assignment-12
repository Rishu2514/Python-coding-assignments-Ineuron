Q-1-Write a Python program to Extract Unique values dictionary values?
A-1-
def extract_unique_values(dictionary):
  unique_values = set()
  for value in dictionary.values():
    unique_values.add(value)
  return unique_values

my_dict = {"a": 1, "b": 2, "c": 3, "d": 2, "e": 1}
unique_values = extract_unique_values(my_dict)
print("Unique values:", unique_values)




Q-2-Write a Python program to find the sum of all items in a dictionary?
A-2-
def sum_dictionary_items(dictionary):
  total_sum = 0
  for value in dictionary.values():
    total_sum += value
  return total_sum

my_dict = {"a": 1, "b": 2, "c": 3, "d": 4, "e": 5}
sum_of_items = sum_dictionary_items(my_dict)
print("Sum of all items:", sum_of_items)


Q-3-Write a Python program to Merging two Dictionaries?
A-3-
def merge_dictionaries(dict1, dict2):
  merged_dict = dict1.copy()
  merged_dict.update(dict2)
  return merged_dict

dict1 = {"a": 1, "b": 2}
dict2 = {"c": 3, "d": 4}

merged_dict = merge_dictionaries(dict1, dict2)
print("Merged dictionary:", merged_dict)



Q-4-Write a Python program to convert key-values list to flat dictionary?
A-4-
def convert_to_flat_dictionary(key_value_list):
  flat_dictionary = {}
  for key, value in key_value_list:
    flat_dictionary[key] = value
  return flat_dictionary

key_value_list = [("name", "John"), ("age", 30), ("city", "New York")]
flat_dict = convert_to_flat_dictionary(key_value_list)
print("Flat dictionary:", flat_dict)




Q-5-Write a Python program to insertion at the beginning in OrderedDict?
A-5-
from collections import OrderedDict

def insert_at_beginning(ordered_dict, key, value):
  ordered_dict[key] = value
  ordered_dict.move_to_end(key, last=False)

my_dict = OrderedDict([('a', 1), ('b', 2), ('c', 3)])
insert_at_beginning(my_dict, 'x', 10)
print("Updated OrderedDict:", my_dict)



Q-6-Write a Python program to check order of character in string using OrderedDict()?
A-6-
from collections import OrderedDict

def check_order_of_characters(string, pattern):
    ordered_dict = OrderedDict.fromkeys(string)

    pattern_index = 0
    for char in ordered_dict:
        if pattern_index == len(pattern):
            break

        if char == pattern[pattern_index]:
            pattern_index += 1

    if pattern_index == len(pattern):
        return True
    else:
        return False


# Example string and pattern
my_string = "Hello World"
my_pattern = "HlW"

# Check the order of characters
if check_order_of_characters(my_string, my_pattern):
    print("The characters in the string follow the given order.")
else:
    print("The characters in the string do not follow the given order.")





Q-7-Write a Python program to sort Python Dictionaries by Key or Value?
A-7-
def sort_dictionary(dictionary, by_key=True):
    if by_key:
        sorted_dict = dict(sorted(dictionary.items()))
    else:
        sorted_dict = dict(sorted(dictionary.items(), key=lambda item: item[1]))

    return sorted_dict

my_dict = {'b': 4, 'a': 2, 'd': 1, 'c': 3}
sorted_by_key = sort_dictionary(my_dict, by_key=True)
print("Sorted by Key:", sorted_by_key)
sorted_by_value = sort_dictionary(my_dict, by_key=False)
print("Sorted by Value:", sorted_by_value)





